/**
 * Security Initializer Module
 * –û—Ç–≤–µ—á–∞–µ—Ç –∑–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é –≤—Å–µ—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
 */

import CSPConfig from '../security/CSPConfig.js';
import SecurityHeaders from '../security/SecurityHeaders.js';
import ThreatDetector from '../security/ThreatDetector.js';
import SecurityMonitor from '../security/SecurityMonitor.js';

export class SecurityInitializer {
  constructor(app) {
    this.app = app;
  }

  /**
   * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Advanced Security Features
   */
  async initialize() {
    try {
      console.log('üîí –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Advanced Security Features...');
      
      // Initialize CSP Configuration
      this.app.cspConfig = new CSPConfig();
      this.app.cspConfig.applyCSPToDocument(document);
      
      // Initialize Security Headers
      this.app.securityHeaders = new SecurityHeaders();
      this.app.securityHeaders.setCSPConfig(this.app.cspConfig);
      this.app.securityHeaders.applyToDocument(document);
      
      // Initialize Threat Detector
      this.app.threatDetector = new ThreatDetector();
      this.app.threatDetector.initialize();
      
      // Initialize Security Monitor
      this.app.securityMonitor = new SecurityMonitor();
      this.app.securityMonitor.initialize();
      
      // Setup global security monitoring
      this.setupGlobalSecurityMonitoring();
      
      console.log('‚úÖ Advanced Security Features –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã');
      
    } catch (error) {
      console.error('SecurityInitializer: –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏:', error);
      throw error;
    }
  }

  /**
   * –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
   * @private
   */
  setupGlobalSecurityMonitoring() {
    // –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º
    document.addEventListener('submit', (event) => {
      this.monitorFormSubmission(event);
    });

    // –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –≤–≤–æ–¥–∞
    document.addEventListener('input', (event) => {
      this.monitorInputActivity(event);
    });

    // –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    document.addEventListener('click', (event) => {
      this.monitorNavigation(event);
    });

    // –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–π
    document.addEventListener('click', (event) => {
      this.monitorInteractionPerformance(event);
    });
  }

  /**
   * –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º
   * @private
   */
  monitorFormSubmission(event) {
    try {
      const formData = new FormData(event.target);
      const formDataObj = Object.fromEntries(formData.entries());
      
      // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—É—é –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å
      const threatLevel = this.app.threatDetector.analyzeFormSubmission(formDataObj);
      
      if (threatLevel > 0.7) {
        console.warn('üö® –í—ã—Å–æ–∫–∏–π —É—Ä–æ–≤–µ–Ω—å —É–≥—Ä–æ–∑—ã –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–æ—Ä–º—ã:', threatLevel);
        this.app.securityMonitor.logThreat('form_submission', {
          threatLevel,
          formData: formDataObj,
          timestamp: new Date().toISOString()
        });
      }
      
      // –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –≤ –∞–Ω–∞–ª–∏—Ç–∏–∫–µ
      if (this.app.analytics) {
        this.app.analytics.trackEvent('form_submission', {
          form_id: event.target.id || 'unknown',
          threat_level: threatLevel
        });
      }
      
    } catch (error) {
      console.error('SecurityInitializer: –û—à–∏–±–∫–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ —Ñ–æ—Ä–º—ã:', error);
    }
  }

  /**
   * –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –≤–≤–æ–¥–∞
   * @private
   */
  monitorInputActivity(event) {
    try {
      const input = event.target;
      const value = input.value;
      
      // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—ã–µ –ø–∞—Ç—Ç–µ—Ä–Ω—ã –≤–≤–æ–¥–∞
      const threatLevel = this.app.threatDetector.analyzeInputPattern(value);
      
      if (threatLevel > 0.8) {
        console.warn('üö® –ü–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—ã–π –ø–∞—Ç—Ç–µ—Ä–Ω –≤–≤–æ–¥–∞:', threatLevel);
        this.app.securityMonitor.logThreat('input_pattern', {
          threatLevel,
          inputType: input.type,
          value: value.substring(0, 100), // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –¥–ª–∏–Ω—É –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
          timestamp: new Date().toISOString()
        });
      }
      
    } catch (error) {
      console.error('SecurityInitializer: –û—à–∏–±–∫–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –≤–≤–æ–¥–∞:', error);
    }
  }

  /**
   * –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
   * @private
   */
  monitorNavigation(event) {
    try {
      const target = event.target;
      
      // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—ã–µ —Å—Å—ã–ª–∫–∏
      if (target.tagName === 'A' && target.href) {
        const threatLevel = this.app.threatDetector.analyzeUrl(target.href);
        
        if (threatLevel > 0.6) {
          console.warn('üö® –ü–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞:', target.href);
          this.app.securityMonitor.logThreat('suspicious_link', {
            threatLevel,
            url: target.href,
            timestamp: new Date().toISOString()
          });
        }
      }
      
    } catch (error) {
      console.error('SecurityInitializer: –û—à–∏–±–∫–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏:', error);
    }
  }

  /**
   * –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–π
   * @private
   */
  monitorInteractionPerformance(event) {
    try {
      const startTime = performance.now();
      
      // –û—Ç–ª–æ–∂–µ–Ω–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
      setTimeout(() => {
        const endTime = performance.now();
        const duration = endTime - startTime;
        
        if (duration > 100) { // –ï—Å–ª–∏ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ –∑–∞–Ω—è–ª–æ –±–æ–ª—å—à–µ 100–º—Å
          console.warn('‚ö†Ô∏è –ú–µ–¥–ª–µ–Ω–Ω–æ–µ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ:', duration + 'ms');
          
          if (this.app.analytics) {
            this.app.analytics.trackEvent('slow_interaction', {
              duration,
              element: event.target.tagName,
              eventType: event.type
            });
          }
        }
      }, 0);
      
    } catch (error) {
      console.error('SecurityInitializer: –û—à–∏–±–∫–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏:', error);
    }
  }

  /**
   * –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
   */
  getSecurityStatistics() {
    try {
      const cspStats = this.app.cspConfig ? this.app.cspConfig.getStatistics() : {};
      const headersStats = this.app.securityHeaders ? this.app.securityHeaders.getSecurityStatistics() : {};
      const threatStats = this.app.threatDetector ? this.app.threatDetector.getStatistics() : {};
      const monitorStats = this.app.securityMonitor ? this.app.securityMonitor.getStatistics() : {};
      
      return {
        csp: cspStats,
        headers: headersStats,
        threats: threatStats,
        monitoring: monitorStats,
        overall: {
          threatsDetected: threatStats.totalThreats || 0,
          violationsBlocked: cspStats.totalViolations || 0,
          securityScore: this.calculateSecurityScore()
        }
      };
    } catch (error) {
      console.error('SecurityInitializer: –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:', error);
      return { error: 'Statistics unavailable' };
    }
  }

  /**
   * –†–∞—Å—á–µ—Ç –æ–±—â–µ–≥–æ –ø–æ–∫–∞–∑–∞—Ç–µ–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
   * @private
   */
  calculateSecurityScore() {
    try {
      let score = 100;
      
      // –£–º–µ–Ω—å—à–∞–µ–º –æ—Ü–µ–Ω–∫—É –∑–∞ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–Ω—ã–µ —É–≥—Ä–æ–∑—ã
      const threatStats = this.app.threatDetector ? this.app.threatDetector.getStatistics() : {};
      const threatCount = threatStats.totalThreats || 0;
      score -= Math.min(threatCount * 5, 30); // –ú–∞–∫—Å–∏–º—É–º -30 –∑–∞ —É–≥—Ä–æ–∑—ã
      
      // –£–º–µ–Ω—å—à–∞–µ–º –æ—Ü–µ–Ω–∫—É –∑–∞ CSP –Ω–∞—Ä—É—à–µ–Ω–∏—è
      const cspStats = this.app.cspConfig ? this.app.cspConfig.getStatistics() : {};
      const violationCount = cspStats.totalViolations || 0;
      score -= Math.min(violationCount * 2, 20); // –ú–∞–∫—Å–∏–º—É–º -20 –∑–∞ –Ω–∞—Ä—É—à–µ–Ω–∏—è
      
      return Math.max(score, 0); // –ù–µ –º–µ–Ω—å—à–µ 0
    } catch (error) {
      console.error('SecurityInitializer: –û—à–∏–±–∫–∞ —Ä–∞—Å—á–µ—Ç–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏:', error);
      return 0;
    }
  }

  /**
   * –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –¥–∞—à–±–æ—Ä–¥–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
   */
  toggleSecurityDashboard() {
    try {
      const dashboard = document.getElementById('security-dashboard');
      if (dashboard) {
        const isVisible = dashboard.style.display !== 'none';
        dashboard.style.display = isVisible ? 'none' : 'block';
        
        if (!isVisible) {
          this.updateSecurityDashboard();
        }
      }
    } catch (error) {
      console.error('SecurityInitializer: –û—à–∏–±–∫–∞ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –¥–∞—à–±–æ—Ä–¥–∞:', error);
    }
  }

  /**
   * –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞—à–±–æ—Ä–¥–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
   * @private
   */
  updateSecurityDashboard() {
    try {
      const dashboard = document.getElementById('security-dashboard');
      if (!dashboard) return;
      
      const stats = this.getSecurityStatistics();
      
      dashboard.innerHTML = `
        <div class="security-dashboard">
          <h3>üîí Security Dashboard</h3>
          <div class="security-stats">
            <div class="stat">
              <span class="label">Security Score:</span>
              <span class="value">${stats.overall.securityScore}/100</span>
            </div>
            <div class="stat">
              <span class="label">Threats Detected:</span>
              <span class="value">${stats.overall.threatsDetected}</span>
            </div>
            <div class="stat">
              <span class="label">Violations Blocked:</span>
              <span class="value">${stats.overall.violationsBlocked}</span>
            </div>
          </div>
        </div>
      `;
    } catch (error) {
      console.error('SecurityInitializer: –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞—à–±–æ—Ä–¥–∞:', error);
    }
  }
} 