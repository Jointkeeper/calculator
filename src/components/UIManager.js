/**
 * UIManager - –ú–æ–¥—É–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è UI –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞–º–∏
 * –¶–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
 */

import { AppState } from '../core/AppState.js?v=1.0.3';
import { NavigationManager } from '../managers/NavigationManager.js?v=1.0.3';

class UIManager {
    constructor() {
        this.appState = AppState.getInstance();
        this.navigationManager = NavigationManager.getInstance();
        this.components = new Map();
        this.initialized = false;
    }

    /**
     * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è UI –º–µ–Ω–µ–¥–∂–µ—Ä–∞
     */
    async initialize() {
        if (this.initialized) return;

        try {
            console.log('üé® –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è UIManager...');
            
            // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑–æ–≤—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
            await this.initializeProgressBar();
            await this.initializeIndustrySelector();
            await this.initializeBusinessSizeStep();
            await this.initializeMarketingBudgetStep();
            await this.initializeMarketingTeamStep();
            await this.initializeMarketingToolsStep();
            await this.initializeContactFormStep();
            
            // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–≤—è–∑–µ–π –º–µ–∂–¥—É –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞–º–∏
            this.setupComponentConnections();
            
            // –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è
            this.subscribeToStateChanges();
            
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–π —à–∞–≥
            console.log('üéØ –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–π —à–∞–≥...');
            this.showStepComponent(1);
            console.log('‚úÖ –ü–µ—Ä–≤—ã–π —à–∞–≥ –ø–æ–∫–∞–∑–∞–Ω');
            
            this.initialized = true;
            console.log('‚úÖ UIManager –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
            
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ UIManager:', error);
            throw error;
        }
    }

    /**
     * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è ProgressBar
     */
    async initializeProgressBar() {
        try {
            const progressContainer = document.getElementById('progress-container');
            
            if (!progressContainer) {
                console.warn('‚ö†Ô∏è –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä #progress-container –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é ProgressBar');
                return;
            }
            // –û–±–Ω–æ–≤–ª—ë–Ω–Ω–∞—è –ª–æ–≥–∏–∫–∞ –¥–ª—è –Ω–æ–≤–æ–≥–æ –¥–∏–∑–∞–π–Ω–∞
            const progressBar = {
                update: (step) => {
                    const progressElement = progressContainer.querySelector('.progress-fill');
                    if (progressElement) {
                        const percentage = (step / 6) * 100;
                        progressElement.style.width = `${percentage}%`;
                    }
                },
                setStep: (step) => {
                    const stepText = progressContainer.querySelector('.progress-current');
                    if (stepText) {
                        stepText.textContent = `–®–∞–≥ ${step} –∏–∑ 6`;
                    }
                    const percentText = progressContainer.querySelector('.progress-percentage');
                    if (percentText) {
                        percentText.textContent = `${Math.round((step / 6) * 100)}% –∑–∞–≤–µ—Ä—à–µ–Ω–æ`;
                    }
                }
            };
            this.components.set('progressBar', progressBar);
            console.log('‚úÖ ProgressBar –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ ProgressBar:', error);
            // –ù–µ –ø—Ä–µ—Ä—ã–≤–∞–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é –∏–∑-–∑–∞ –æ—à–∏–±–∫–∏ ProgressBar
        }
    }

    /**
     * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è IndustrySelector
     */
    async initializeIndustrySelector() {
        try {
            const formContent = document.getElementById('form-content');
            
            if (!formContent) {
                console.warn('‚ö†Ô∏è –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä #form-content –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é IndustrySelector');
                return;
            }
            
            // –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç–æ–π —Å–µ–ª–µ–∫—Ç–æ—Ä –æ—Ç—Ä–∞—Å–ª–µ–π
            const industrySelector = {
                render: () => {
                    formContent.innerHTML = `
                        <div class="calculator-step active">
                            <h3 class="text-xl font-semibold text-gray-900 mb-6">–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à—É –æ—Ç—Ä–∞—Å–ª—å</h3>
                            <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
                                <button class="industry-card p-4 border border-gray-200 rounded-lg hover:border-steamphony-blue hover:bg-blue-50 transition-colors" data-industry="restaurant">
                                    <div class="text-center">
                                        <div class="w-12 h-12 bg-orange-100 rounded-lg flex items-center justify-center mx-auto mb-3">
                                            <svg class="w-6 h-6 text-orange-600" fill="currentColor" viewBox="0 0 20 20">
                                                <path d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"/>
                                            </svg>
                                        </div>
                                        <h4 class="font-medium text-gray-900">–†–µ—Å—Ç–æ—Ä–∞–Ω—ã –∏ –∫–∞—Ñ–µ</h4>
                                        <p class="text-sm text-gray-600 mt-1">–û–±—â–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ –ø–∏—Ç–∞–Ω–∏–µ</p>
                                    </div>
                                </button>
                                <button class="industry-card p-4 border border-gray-200 rounded-lg hover:border-steamphony-blue hover:bg-blue-50 transition-colors" data-industry="retail">
                                    <div class="text-center">
                                        <div class="w-12 h-12 bg-green-100 rounded-lg flex items-center justify-center mx-auto mb-3">
                                            <svg class="w-6 h-6 text-green-600" fill="currentColor" viewBox="0 0 20 20">
                                                <path d="M3 3a1 1 0 000 2v8a2 2 0 002 2h2.586l-1.293 1.293a1 1 0 101.414 1.414L10 15.414l2.293 2.293a1 1 0 001.414-1.414L12.414 15H15a2 2 0 002-2V5a1 1 0 100-2H3zm11.707 4.707a1 1 0 00-1.414-1.414L10 9.586 8.707 8.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z"/>
                                            </svg>
                                        </div>
                                        <h4 class="font-medium text-gray-900">–†–æ–∑–Ω–∏—á–Ω–∞—è —Ç–æ—Ä–≥–æ–≤–ª—è</h4>
                                        <p class="text-sm text-gray-600 mt-1">–ú–∞–≥–∞–∑–∏–Ω—ã –∏ —Ç–æ—Ä–≥–æ–≤–ª—è</p>
                                    </div>
                                </button>
                                <button class="industry-card p-4 border border-gray-200 rounded-lg hover:border-steamphony-blue hover:bg-blue-50 transition-colors" data-industry="services">
                                    <div class="text-center">
                                        <div class="w-12 h-12 bg-blue-100 rounded-lg flex items-center justify-center mx-auto mb-3">
                                            <svg class="w-6 h-6 text-blue-600" fill="currentColor" viewBox="0 0 20 20">
                                                <path d="M13 6a3 3 0 11-6 0 3 3 0 016 0zM18 8a2 2 0 11-4 0 2 2 0 014 0zM14 15a4 4 0 00-8 0v3h8v-3z"/>
                                            </svg>
                                        </div>
                                        <h4 class="font-medium text-gray-900">–£—Å–ª—É–≥–∏</h4>
                                        <p class="text-sm text-gray-600 mt-1">–°—Ñ–µ—Ä–∞ —É—Å–ª—É–≥</p>
                                    </div>
                                </button>
                            </div>
                            <div class="mt-8 text-center">
                                <p class="text-sm text-gray-600">–í—ã–±–µ—Ä–∏—Ç–µ –æ—Ç—Ä–∞—Å–ª—å, –∫–æ—Ç–æ—Ä–∞—è –Ω–∞–∏–±–æ–ª–µ–µ —Ç–æ—á–Ω–æ –æ–ø–∏—Å—ã–≤–∞–µ—Ç –≤–∞—à –±–∏–∑–Ω–µ—Å</p>
                            </div>
                        </div>
                    `;
                    
                    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
                    const industryCards = formContent.querySelectorAll('.industry-card');
                    industryCards.forEach(card => {
                        card.addEventListener('click', () => {
                            const industry = card.dataset.industry;
                            
                            // –£–±–∏—Ä–∞–µ–º –≤—ã–¥–µ–ª–µ–Ω–∏–µ —Å–æ –≤—Å–µ—Ö –∫–∞—Ä—Ç–æ—á–µ–∫
                            industryCards.forEach(c => c.classList.remove('border-steamphony-blue', 'bg-blue-50'));
                            
                            // –î–æ–±–∞–≤–ª—è–µ–º –≤—ã–¥–µ–ª–µ–Ω–∏–µ –∫ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –∫–∞—Ä—Ç–æ—á–∫–µ
                            card.classList.add('border-steamphony-blue', 'bg-blue-50');
                            
                            // –í—ã–∑—ã–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫
                            this.handleIndustrySelect(industry);
                        });
                    });
                }
            };
            
            this.components.set('industrySelector', industrySelector);
            console.log('‚úÖ IndustrySelector –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
            
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ IndustrySelector:', error);
            // –ù–µ –ø—Ä–µ—Ä—ã–≤–∞–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é –∏–∑-–∑–∞ –æ—à–∏–±–∫–∏ IndustrySelector
        }
    }

    /**
     * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è BusinessSizeStep
     */
    async initializeBusinessSizeStep() {
        try {
            const formContent = document.getElementById('form-content');
            
            if (!formContent) {
                console.warn('‚ö†Ô∏è –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä #form-content –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é BusinessSizeStep');
                return;
            }
            
            // –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç–æ–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –≤—ã–±–æ—Ä–∞ —Ä–∞–∑–º–µ—Ä–∞ –±–∏–∑–Ω–µ—Å–∞
            const businessSizeStep = {
                render: () => {
                    formContent.innerHTML = `
                        <div class="calculator-step">
                            <h3 class="text-xl font-semibold text-gray-900 mb-6">–ö–∞–∫–æ–π —É –≤–∞—Å —Ä–∞–∑–º–µ—Ä –±–∏–∑–Ω–µ—Å–∞?</h3>
                            <div class="grid grid-cols-1 md:grid-cols-3 gap-4">
                                <button class="size-card p-6 border border-gray-200 rounded-lg hover:border-steamphony-blue hover:bg-blue-50 transition-colors" data-size="small">
                                    <div class="text-center">
                                        <h4 class="font-medium text-gray-900 mb-2">–ú–∞–ª—ã–π –±–∏–∑–Ω–µ—Å</h4>
                                        <p class="text-sm text-gray-600">1-10 —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤</p>
                                    </div>
                                </button>
                                <button class="size-card p-6 border border-gray-200 rounded-lg hover:border-steamphony-blue hover:bg-blue-50 transition-colors" data-size="medium">
                                    <div class="text-center">
                                        <h4 class="font-medium text-gray-900 mb-2">–°—Ä–µ–¥–Ω–∏–π –±–∏–∑–Ω–µ—Å</h4>
                                        <p class="text-sm text-gray-600">11-50 —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤</p>
                                    </div>
                                </button>
                                <button class="size-card p-6 border border-gray-200 rounded-lg hover:border-steamphony-blue hover:bg-blue-50 transition-colors" data-size="large">
                                    <div class="text-center">
                                        <h4 class="font-medium text-gray-900 mb-2">–ö—Ä—É–ø–Ω—ã–π –±–∏–∑–Ω–µ—Å</h4>
                                        <p class="text-sm text-gray-600">50+ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤</p>
                                    </div>
                                </button>
                            </div>
                        </div>
                    `;
                    
                    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
                    const sizeCards = formContent.querySelectorAll('.size-card');
                    sizeCards.forEach(card => {
                        card.addEventListener('click', () => {
                            const size = card.dataset.size;
                            
                            // –£–±–∏—Ä–∞–µ–º –≤—ã–¥–µ–ª–µ–Ω–∏–µ —Å–æ –≤—Å–µ—Ö –∫–∞—Ä—Ç–æ—á–µ–∫
                            sizeCards.forEach(c => c.classList.remove('border-steamphony-blue', 'bg-blue-50'));
                            
                            // –î–æ–±–∞–≤–ª—è–µ–º –≤—ã–¥–µ–ª–µ–Ω–∏–µ –∫ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –∫–∞—Ä—Ç–æ—á–∫–µ
                            card.classList.add('border-steamphony-blue', 'bg-blue-50');
                            
                            // –í—ã–∑—ã–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫
                            this.handleBusinessSizeSelect(size);
                        });
                    });
                }
            };
            
            this.components.set('businessSizeStep', businessSizeStep);
            console.log('‚úÖ BusinessSizeStep –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
            
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ BusinessSizeStep:', error);
            // –ù–µ –ø—Ä–µ—Ä—ã–≤–∞–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é –∏–∑-–∑–∞ –æ—à–∏–±–∫–∏ BusinessSizeStep
        }
    }

    /**
     * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è MarketingBudgetStep
     */
    async initializeMarketingBudgetStep() {
        try {
            const formContent = document.getElementById('form-content');
            
            if (!formContent) {
                console.warn('‚ö†Ô∏è –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä #form-content –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é MarketingBudgetStep');
                return;
            }
            
            // –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç–æ–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –≤—ã–±–æ—Ä–∞ –±—é–¥–∂–µ—Ç–∞
            const marketingBudgetStep = {
                render: () => {
                    formContent.innerHTML = `
                        <div class="calculator-step">
                            <h3 class="text-xl font-semibold text-gray-900 mb-6">–ö–∞–∫–æ–π —É –≤–∞—Å –º–µ—Å—è—á–Ω—ã–π –±—é–¥–∂–µ—Ç –Ω–∞ –º–∞—Ä–∫–µ—Ç–∏–Ω–≥?</h3>
                            <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                                <button class="budget-card p-6 border border-gray-200 rounded-lg hover:border-steamphony-blue hover:bg-blue-50 transition-colors" data-budget="50000">
                                    <div class="text-center">
                                        <h4 class="font-medium text-gray-900 mb-2">–î–æ 50 000 ‚ÇΩ</h4>
                                        <p class="text-sm text-gray-600">–ù–µ–±–æ–ª—å—à–æ–π –±—é–¥–∂–µ—Ç</p>
                                    </div>
                                </button>
                                <button class="budget-card p-6 border border-gray-200 rounded-lg hover:border-steamphony-blue hover:bg-blue-50 transition-colors" data-budget="150000">
                                    <div class="text-center">
                                        <h4 class="font-medium text-gray-900 mb-2">50 000 - 150 000 ‚ÇΩ</h4>
                                        <p class="text-sm text-gray-600">–°—Ä–µ–¥–Ω–∏–π –±—é–¥–∂–µ—Ç</p>
                                    </div>
                                </button>
                                <button class="budget-card p-6 border border-gray-200 rounded-lg hover:border-steamphony-blue hover:bg-blue-50 transition-colors" data-budget="300000">
                                    <div class="text-center">
                                        <h4 class="font-medium text-gray-900 mb-2">150 000 - 300 000 ‚ÇΩ</h4>
                                        <p class="text-sm text-gray-600">–ë–æ–ª—å—à–æ–π –±—é–¥–∂–µ—Ç</p>
                                    </div>
                                </button>
                                <button class="budget-card p-6 border border-gray-200 rounded-lg hover:border-steamphony-blue hover:bg-blue-50 transition-colors" data-budget="500000">
                                    <div class="text-center">
                                        <h4 class="font-medium text-gray-900 mb-2">–ë–æ–ª–µ–µ 300 000 ‚ÇΩ</h4>
                                        <p class="text-sm text-gray-600">–ö—Ä—É–ø–Ω—ã–π –±—é–¥–∂–µ—Ç</p>
                                    </div>
                                </button>
                            </div>
                        </div>
                    `;
                    
                    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
                    const budgetCards = formContent.querySelectorAll('.budget-card');
                    budgetCards.forEach(card => {
                        card.addEventListener('click', () => {
                            const budget = card.dataset.budget;
                            
                            // –£–±–∏—Ä–∞–µ–º –≤—ã–¥–µ–ª–µ–Ω–∏–µ —Å–æ –≤—Å–µ—Ö –∫–∞—Ä—Ç–æ—á–µ–∫
                            budgetCards.forEach(c => c.classList.remove('border-steamphony-blue', 'bg-blue-50'));
                            
                            // –î–æ–±–∞–≤–ª—è–µ–º –≤—ã–¥–µ–ª–µ–Ω–∏–µ –∫ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –∫–∞—Ä—Ç–æ—á–∫–µ
                            card.classList.add('border-steamphony-blue', 'bg-blue-50');
                            
                            // –í—ã–∑—ã–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫
                            this.handleMarketingBudgetSelect(budget);
                        });
                    });
                }
            };
            
            this.components.set('marketingBudgetStep', marketingBudgetStep);
            console.log('‚úÖ MarketingBudgetStep –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
            
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ MarketingBudgetStep:', error);
            // –ù–µ –ø—Ä–µ—Ä—ã–≤–∞–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é –∏–∑-–∑–∞ –æ—à–∏–±–∫–∏ MarketingBudgetStep
        }
    }

    /**
     * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è MarketingTeamStep
     */
    async initializeMarketingTeamStep() {
        try {
            const formContent = document.getElementById('form-content');
            
            if (!formContent) {
                console.warn('‚ö†Ô∏è –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä #form-content –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é MarketingTeamStep');
                return;
            }
            
            // –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç–æ–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –≤—ã–±–æ—Ä–∞ –∫–æ–º–∞–Ω–¥—ã
            const marketingTeamStep = {
                render: () => {
                    formContent.innerHTML = `
                        <div class="calculator-step">
                            <h3 class="text-xl font-semibold text-gray-900 mb-6">–°–∫–æ–ª—å–∫–æ —á–µ–ª–æ–≤–µ–∫ –≤ –≤–∞—à–µ–π –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤–æ–π –∫–æ–º–∞–Ω–¥–µ?</h3>
                            <div class="grid grid-cols-1 md:grid-cols-3 gap-4">
                                <button class="team-card p-6 border border-gray-200 rounded-lg hover:border-steamphony-blue hover:bg-blue-50 transition-colors" data-team="1">
                                    <div class="text-center">
                                        <h4 class="font-medium text-gray-900 mb-2">1 —á–µ–ª–æ–≤–µ–∫</h4>
                                        <p class="text-sm text-gray-600">–ú–∞—Ä–∫–µ—Ç–æ–ª–æ–≥-–æ–¥–∏–Ω–æ—á–∫–∞</p>
                                    </div>
                                </button>
                                <button class="team-card p-6 border border-gray-200 rounded-lg hover:border-steamphony-blue hover:bg-blue-50 transition-colors" data-team="2">
                                    <div class="text-center">
                                        <h4 class="font-medium text-gray-900 mb-2">2-3 —á–µ–ª–æ–≤–µ–∫–∞</h4>
                                        <p class="text-sm text-gray-600">–ù–µ–±–æ–ª—å—à–∞—è –∫–æ–º–∞–Ω–¥–∞</p>
                                    </div>
                                </button>
                                <button class="team-card p-6 border border-gray-200 rounded-lg hover:border-steamphony-blue hover:bg-blue-50 transition-colors" data-team="4">
                                    <div class="text-center">
                                        <h4 class="font-medium text-gray-900 mb-2">4+ —á–µ–ª–æ–≤–µ–∫–∞</h4>
                                        <p class="text-sm text-gray-600">–ë–æ–ª—å—à–∞—è –∫–æ–º–∞–Ω–¥–∞</p>
                                    </div>
                                </button>
                            </div>
                        </div>
                    `;
                    
                    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
                    const teamCards = formContent.querySelectorAll('.team-card');
                    teamCards.forEach(card => {
                        card.addEventListener('click', () => {
                            const team = card.dataset.team;
                            
                            // –£–±–∏—Ä–∞–µ–º –≤—ã–¥–µ–ª–µ–Ω–∏–µ —Å–æ –≤—Å–µ—Ö –∫–∞—Ä—Ç–æ—á–µ–∫
                            teamCards.forEach(c => c.classList.remove('border-steamphony-blue', 'bg-blue-50'));
                            
                            // –î–æ–±–∞–≤–ª—è–µ–º –≤—ã–¥–µ–ª–µ–Ω–∏–µ –∫ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –∫–∞—Ä—Ç–æ—á–∫–µ
                            card.classList.add('border-steamphony-blue', 'bg-blue-50');
                            
                            // –í—ã–∑—ã–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫
                            this.handleMarketingTeamSelect({ teamSize: parseInt(team) });
                        });
                    });
                }
            };
            
            this.components.set('marketingTeamStep', marketingTeamStep);
            console.log('‚úÖ MarketingTeamStep –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
            
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ MarketingTeamStep:', error);
            // –ù–µ –ø—Ä–µ—Ä—ã–≤–∞–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é –∏–∑-–∑–∞ –æ—à–∏–±–∫–∏ MarketingTeamStep
        }
    }

    /**
     * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è MarketingToolsStep
     */
    async initializeMarketingToolsStep() {
        try {
            const formContent = document.getElementById('form-content');
            
            if (!formContent) {
                console.warn('‚ö†Ô∏è –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä #form-content –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é MarketingToolsStep');
                return;
            }
            
            // –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç–æ–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –≤—ã–±–æ—Ä–∞ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤
            const marketingToolsStep = {
                render: () => {
                    formContent.innerHTML = `
                        <div class="calculator-step">
                            <h3 class="text-xl font-semibold text-gray-900 mb-6">–ö–∞–∫–∏–µ –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –≤—ã –∏—Å–ø–æ–ª—å–∑—É–µ—Ç–µ?</h3>
                            <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                                <label class="tool-checkbox p-4 border border-gray-200 rounded-lg hover:border-steamphony-blue hover:bg-blue-50 transition-colors cursor-pointer">
                                    <input type="checkbox" class="mr-3" data-tool="analytics">
                                    <span class="font-medium text-gray-900">–ê–Ω–∞–ª–∏—Ç–∏–∫–∞ (Google Analytics)</span>
                                </label>
                                <label class="tool-checkbox p-4 border border-gray-200 rounded-lg hover:border-steamphony-blue hover:bg-blue-50 transition-colors cursor-pointer">
                                    <input type="checkbox" class="mr-3" data-tool="automation">
                                    <span class="font-medium text-gray-900">–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è</span>
                                </label>
                                <label class="tool-checkbox p-4 border border-gray-200 rounded-lg hover:border-steamphony-blue hover:bg-blue-50 transition-colors cursor-pointer">
                                    <input type="checkbox" class="mr-3" data-tool="crm">
                                    <span class="font-medium text-gray-900">CRM —Å–∏—Å—Ç–µ–º–∞</span>
                                </label>
                                <label class="tool-checkbox p-4 border border-gray-200 rounded-lg hover:border-steamphony-blue hover:bg-blue-50 transition-colors cursor-pointer">
                                    <input type="checkbox" class="mr-3" data-tool="social">
                                    <span class="font-medium text-gray-900">–°–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–µ—Ç–∏</span>
                                </label>
                            </div>
                        </div>
                    `;
                    
                    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
                    const toolCheckboxes = formContent.querySelectorAll('.tool-checkbox input');
                    toolCheckboxes.forEach(checkbox => {
                        checkbox.addEventListener('change', () => {
                            const selectedTools = Array.from(toolCheckboxes)
                                .filter(cb => cb.checked)
                                .map(cb => cb.dataset.tool);
                            
                            // –í—ã–∑—ã–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫
                            this.handleMarketingToolsSelect({ tools: selectedTools });
                        });
                    });
                }
            };
            
            this.components.set('marketingToolsStep', marketingToolsStep);
            console.log('‚úÖ MarketingToolsStep –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
            
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ MarketingToolsStep:', error);
            // –ù–µ –ø—Ä–µ—Ä—ã–≤–∞–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é –∏–∑-–∑–∞ –æ—à–∏–±–∫–∏ MarketingToolsStep
        }
    }

    /**
     * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è ContactFormStep
     */
    async initializeContactFormStep() {
        try {
            const formContent = document.getElementById('form-content');
            
            if (!formContent) {
                console.warn('‚ö†Ô∏è –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä #form-content –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é ContactFormStep');
                return;
            }
            
            // –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç–æ–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –∫–æ–Ω—Ç–∞–∫—Ç–Ω–æ–π —Ñ–æ—Ä–º—ã
            const contactFormStep = {
                render: () => {
                    formContent.innerHTML = `
                        <div class="calculator-step">
                            <h3 class="text-xl font-semibold text-gray-900 mb-6">–û—Å—Ç–∞–≤—å—Ç–µ –∫–æ–Ω—Ç–∞–∫—Ç—ã –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤</h3>
                            <form class="space-y-4">
                                <div>
                                    <label class="block text-sm font-medium text-gray-700 mb-1">–ò–º—è</label>
                                    <input type="text" name="name" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-steamphony-blue">
                                </div>
                                <div>
                                    <label class="block text-sm font-medium text-gray-700 mb-1">Email</label>
                                    <input type="email" name="email" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-steamphony-blue">
                                </div>
                                <div>
                                    <label class="block text-sm font-medium text-gray-700 mb-1">–¢–µ–ª–µ—Ñ–æ–Ω</label>
                                    <input type="tel" name="phone" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-steamphony-blue">
                                </div>
                                <button type="submit" class="nav-button primary w-full">
                                    –ü–æ–ª—É—á–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
                                </button>
                            </form>
                        </div>
                    `;
                    
                    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã
                    const form = formContent.querySelector('form');
                    form.addEventListener('submit', (e) => {
                        e.preventDefault();
                        const formData = new FormData(form);
                        const contactData = {
                            name: formData.get('name'),
                            email: formData.get('email'),
                            phone: formData.get('phone')
                        };
                        
                        // –í—ã–∑—ã–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫
                        this.handleContactFormSubmit(contactData);
                    });
                }
            };
            
            this.components.set('contactFormStep', contactFormStep);
            console.log('‚úÖ ContactFormStep –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
            
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ ContactFormStep:', error);
            // –ù–µ –ø—Ä–µ—Ä—ã–≤–∞–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é –∏–∑-–∑–∞ –æ—à–∏–±–∫–∏ ContactFormStep
        }
    }

    /**
     * –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–≤—è–∑–µ–π –º–µ–∂–¥—É –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞–º–∏
     */
    setupComponentConnections() {
        try {
            // –°–ª—É—à–∞—Ç–µ–ª–∏ —Å–æ–±—ã—Ç–∏–π ProgressBar
            const progressBar = this.components.get('progressBar');
            if (progressBar) {
                const progressContainer = document.getElementById('progress-container');
                if (progressContainer) {
                    progressContainer.addEventListener('stepClicked', (event) => {
                        this.handleStepNavigation(event.detail.step);
                    });
                }
            }
            
            // –°–ª—É—à–∞—Ç–µ–ª–∏ —Å–æ–±—ã—Ç–∏–π IndustrySelector
            const industrySelector = this.components.get('industrySelector');
            if (industrySelector) {
                const formContainer = document.getElementById('form-content');
                if (formContainer) {
                    formContainer.addEventListener('industryConfirmed', (event) => {
                        this.handleIndustryConfirmed(event.detail);
                    });
                    
                    formContainer.addEventListener('industrySelected', (event) => {
                        this.handleIndustrySelected(event.detail);
                    });
                }
            }
            
            console.log('‚úÖ –°–≤—è–∑–∏ –º–µ–∂–¥—É –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞–º–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã');
            
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–≤—è–∑–µ–π:', error);
        }
    }

    /**
     * –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è
     */
    subscribeToStateChanges() {
        this.appState.subscribe((event) => {
            const { type, data } = event.detail;
            if (type === 'currentStep' || type === 'stepChanged') {
                this.updateStepDisplay(this.appState.getCurrentStep());
            } else if (type === 'formData' || type === 'formDataChanged') {
                this.updateFormDataDisplay(this.appState.getFormData());
            } else if (type === 'results' || type === 'resultsChanged') {
                this.updateResultsDisplay(data);
            }
        });
    }

    /**
     * –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —à–∞–≥–∞
     */
    updateStepDisplay(step) {
        try {
            // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ ProgressBar
            const progressBar = this.components.get('progressBar');
            if (progressBar) {
                progressBar.update(step);
                progressBar.setStep(step); // –û–±–Ω–æ–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç —à–∞–≥–∞
            }
            
            // –ü–æ–∫–∞–∑ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–≥–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
            this.showStepComponent(step);
            
            // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≥–æ–ª–æ–≤–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
            this.updatePageTitle(step);
            
            console.log(`üìç –û–±–Ω–æ–≤–ª–µ–Ω —à–∞–≥: ${step}`);
            
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —à–∞–≥–∞:', error);
        }
    }

    /**
     * –ü–æ–∫–∞–∑ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ —à–∞–≥–∞
     */
    showStepComponent(step) {
        try {
            console.log(`üéØ –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —à–∞–≥ ${step}...`);
            
            // –°–∫—Ä—ã—Ç—å –≤—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
            this.hideAllComponents();
            
            // –ü–æ–∫–∞–∑–∞—Ç—å –Ω—É–∂–Ω—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç
            switch (step) {
                case 1:
                    console.log('üéØ –ü–æ–∫–∞–∑—ã–≤–∞–µ–º industrySelector...');
                    this.showComponent('industrySelector');
                    break;
                case 2:
                    console.log('üéØ –ü–æ–∫–∞–∑—ã–≤–∞–µ–º businessSizeStep...');
                    this.showComponent('businessSizeStep');
                    break;
                case 3:
                    console.log('üéØ –ü–æ–∫–∞–∑—ã–≤–∞–µ–º marketingBudgetStep...');
                    this.showComponent('marketingBudgetStep');
                    break;
                case 4:
                    console.log('üéØ –ü–æ–∫–∞–∑—ã–≤–∞–µ–º marketingToolsStep...');
                    this.showComponent('marketingToolsStep');
                    break;
                case 5:
                    console.log('üéØ –ü–æ–∫–∞–∑—ã–≤–∞–µ–º marketingTeamStep...');
                    this.showComponent('marketingTeamStep');
                    break;
                case 6:
                    console.log('üéØ –ü–æ–∫–∞–∑—ã–≤–∞–µ–º contactFormStep...');
                    this.showComponent('contactFormStep');
                    break;
                default:
                    console.warn(`‚ö†Ô∏è –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —à–∞–≥: ${step}`);
            }
            
            console.log(`‚úÖ –®–∞–≥ ${step} –ø–æ–∫–∞–∑–∞–Ω`);
            
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–∫–∞–∑–∞ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ —à–∞–≥–∞:', error);
        }
    }

    /**
     * –°–∫—Ä—ã—Ç–∏–µ –≤—Å–µ—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
     */
    hideAllComponents() {
        this.components.forEach((component, name) => {
            if (component && typeof component.hide === 'function') {
                component.hide();
            } else if (component && component.container) {
                component.container.style.display = 'none';
            }
        });
    }

    /**
     * –ü–æ–∫–∞–∑ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
     */
    showComponent(componentName) {
        console.log(`üéØ –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç: ${componentName}`);
        const component = this.components.get(componentName);
        console.log(`üéØ –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –Ω–∞–π–¥–µ–Ω:`, component);
        
        if (component) {
            if (typeof component.show === 'function') {
                console.log(`üéØ –í—ã–∑—ã–≤–∞–µ–º component.show()`);
                component.show();
            } else if (component.container) {
                console.log(`üéØ –ü–æ–∫–∞–∑—ã–≤–∞–µ–º container`);
                component.container.style.display = 'block';
            } else if (typeof component.render === 'function') {
                console.log(`üéØ –í—ã–∑—ã–≤–∞–µ–º component.render()`);
                // –î–ª—è –Ω–∞—à–∏—Ö –ø—Ä–æ—Å—Ç—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
                component.render();
            }
            
            // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
            this.updateComponentData(componentName);
            console.log(`‚úÖ –ö–æ–º–ø–æ–Ω–µ–Ω—Ç ${componentName} –ø–æ–∫–∞–∑–∞–Ω`);
        } else {
            console.warn(`‚ö†Ô∏è –ö–æ–º–ø–æ–Ω–µ–Ω—Ç ${componentName} –Ω–µ –Ω–∞–π–¥–µ–Ω`);
        }
    }

    /**
     * –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
     */
    updateComponentData(componentName) {
        const component = this.components.get(componentName);
        const formData = this.appState.getFormData();
        
        if (component && typeof component.updateWithFormData === 'function') {
            component.updateWithFormData(formData);
        }
    }

    /**
     * –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≥–æ–ª–æ–≤–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
     */
    updatePageTitle(step) {
        const titles = {
            1: '–í—ã–±–æ—Ä –æ—Ç—Ä–∞—Å–ª–∏ - Steamphony Calculator',
            2: '–†–∞–∑–º–µ—Ä –±–∏–∑–Ω–µ—Å–∞ - Steamphony Calculator',
            3: '–ú–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤—ã–π –±—é–¥–∂–µ—Ç - Steamphony Calculator',
            4: '–ú–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã - Steamphony Calculator',
            5: '–ú–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤–∞—è –∫–æ–º–∞–Ω–¥–∞ - Steamphony Calculator',
            6: '–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∞–Ω–∞–ª–∏–∑–∞ - Steamphony Calculator'
        };
        
        document.title = titles[step] || 'Steamphony Calculator';
    }

    /**
     * –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö —Ñ–æ—Ä–º—ã
     */
    updateFormDataDisplay(formData) {
        // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤—Å–µ—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ —Å –Ω–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
        this.components.forEach((component, name) => {
            if (component && typeof component.updateWithFormData === 'function') {
                component.updateWithFormData(formData);
            }
        });
    }

    /**
     * –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
     */
    updateResultsDisplay(results) {
        const contactFormStep = this.components.get('contactFormStep');
        if (contactFormStep && typeof contactFormStep.updateWithResults === 'function') {
            contactFormStep.updateWithResults(results);
        }
    }

    /**
     * –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
     */
    handleIndustrySelect(industry) {
        console.log('üìä –í—ã–±—Ä–∞–Ω–∞ –æ—Ç—Ä–∞—Å–ª—å:', industry);
        this.appState.updateField('industry', industry);
    }

    handleIndustryNext(selectionData) {
        console.log('‚û°Ô∏è –ü–µ—Ä–µ—Ö–æ–¥ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —à–∞–≥—É:', selectionData);
        
        this.appState.updateFormData(selectionData);
        this.navigationManager.nextStep();
    }

    handleBusinessSizeSelect(size) {
        console.log('üìè –†–∞–∑–º–µ—Ä –±–∏–∑–Ω–µ—Å–∞ –≤—ã–±—Ä–∞–Ω:', size);
        this.appState.updateField('businessSize', size);
    }

    handleBusinessSizeNext(data) {
        console.log('‚û°Ô∏è –ü–µ—Ä–µ—Ö–æ–¥ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —à–∞–≥—É –∏–∑ BusinessSizeStep:', data);
        
        this.appState.updateFormData(data);
        this.navigationManager.nextStep();
    }

    handleBusinessSizeBack(data) {
        console.log('‚¨ÖÔ∏è –í–æ–∑–≤—Ä–∞—Ç –∫ –ø—Ä–µ–¥—ã–¥—É—â–µ–º—É —à–∞–≥—É –∏–∑ BusinessSizeStep:', data);
        this.navigationManager.previousStep();
    }

    handleMarketingBudgetSelect(budget) {
        console.log('üí∞ –ú–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤—ã–π –±—é–¥–∂–µ—Ç –≤—ã–±—Ä–∞–Ω:', budget);
        this.appState.updateField('marketingBudget', budget);
    }

    handleMarketingBudgetNext(data) {
        console.log('‚û°Ô∏è –ü–µ—Ä–µ—Ö–æ–¥ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —à–∞–≥—É –∏–∑ MarketingBudgetStep:', data);
        
        this.appState.updateFormData(data);
        this.navigationManager.nextStep();
    }

    handleMarketingBudgetBack(data) {
        console.log('‚¨ÖÔ∏è –í–æ–∑–≤—Ä–∞—Ç –∫ –ø—Ä–µ–¥—ã–¥—É—â–µ–º—É —à–∞–≥—É –∏–∑ MarketingBudgetStep:', data);
        this.navigationManager.previousStep();
    }

    handleMarketingTeamSelect(data) {
        console.log('üë• –ú–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤–∞—è –∫–æ–º–∞–Ω–¥–∞ –≤—ã–±—Ä–∞–Ω–∞:', data);
        this.appState.updateField('marketingTeam', data);
    }

    handleMarketingTeamNext(data) {
        console.log('‚û°Ô∏è –ü–µ—Ä–µ—Ö–æ–¥ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —à–∞–≥—É –∏–∑ MarketingTeamStep:', data);
        
        this.appState.updateFormData(data);
        this.navigationManager.nextStep();
    }

    handleMarketingTeamBack(data) {
        console.log('‚¨ÖÔ∏è –í–æ–∑–≤—Ä–∞—Ç –∫ –ø—Ä–µ–¥—ã–¥—É—â–µ–º—É —à–∞–≥—É –∏–∑ MarketingTeamStep:', data);
        this.navigationManager.previousStep();
    }

    handleMarketingToolsSelect(data) {
        console.log('üõ†Ô∏è –ú–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –≤—ã–±—Ä–∞–Ω—ã:', data);
        this.appState.updateField('marketingTools', data);
    }

    handleMarketingToolsNext(data) {
        console.log('‚û°Ô∏è –ü–µ—Ä–µ—Ö–æ–¥ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —à–∞–≥—É –∏–∑ MarketingToolsStep:', data);
        
        this.appState.updateFormData(data);
        this.navigationManager.nextStep();
    }

    handleMarketingToolsBack(data) {
        console.log('‚¨ÖÔ∏è –í–æ–∑–≤—Ä–∞—Ç –∫ –ø—Ä–µ–¥—ã–¥—É—â–µ–º—É —à–∞–≥—É –∏–∑ MarketingToolsStep:', data);
        this.navigationManager.previousStep();
    }

    handleContactFormSubmit(contactData) {
        console.log('üìù –§–æ—Ä–º–∞ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞:', contactData);
        this.appState.updateField('contactInfo', contactData);
    }

    handleIndustryConfirmed(detail) {
        console.log('‚úÖ –û—Ç—Ä–∞—Å–ª—å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞:', detail);
        this.appState.updateField('industry', detail.industry);
    }

    handleIndustrySelected(detail) {
        console.log('üéØ –û—Ç—Ä–∞—Å–ª—å –≤—ã–±—Ä–∞–Ω–∞:', detail);
    }

    handleStepNavigation(step) {
        console.log(`üîÑ –ü–µ—Ä–µ—Ö–æ–¥ –∫ —à–∞–≥—É ${step}`);
        this.navigationManager.navigateToStep(step);
    }

    onCalculatorComplete() {
        console.log('üéâ –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –∑–∞–≤–µ—Ä—à–µ–Ω!');
        
        // Dispatch —Å–æ–±—ã—Ç–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
        const event = new CustomEvent('calculatorComplete', {
            detail: {
                formData: this.appState.getFormData(),
                results: this.appState.getResults(),
                completionTime: Date.now()
            },
            bubbles: true
        });
        
        document.dispatchEvent(event);
    }

    /**
     * –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
     */
    getComponent(name) {
        return this.components.get(name);
    }

    /**
     * –°–±—Ä–æ—Å –≤—Å–µ—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
     */
    reset() {
        this.components.forEach((component, name) => {
            if (component && typeof component.reset === 'function') {
                component.reset();
            }
        });
    }

    /**
     * –£–Ω–∏—á—Ç–æ–∂–µ–Ω–∏–µ UI –º–µ–Ω–µ–¥–∂–µ—Ä–∞
     */
    destroy() {
        this.components.forEach((component, name) => {
            if (component && typeof component.destroy === 'function') {
                component.destroy();
            }
        });
        
        this.components.clear();
        this.initialized = false;
    }
}

// –≠–∫—Å–ø–æ—Ä—Ç —Å–∏–Ω–≥–ª—Ç–æ–Ω–∞
export const uiManager = new UIManager(); 