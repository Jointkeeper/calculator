/**
 * UIManager - –ú–æ–¥—É–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è UI –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞–º–∏
 * –¶–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
 */

import { AppState } from '../core/AppState.js';
import { NavigationManager } from '../managers/NavigationManager.js';

class UIManager {
    constructor() {
        this.appState = AppState.getInstance();
        this.navigationManager = NavigationManager.getInstance();
        this.components = new Map();
        this.initialized = false;
    }

    /**
     * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è UI –º–µ–Ω–µ–¥–∂–µ—Ä–∞
     */
    async initialize() {
        if (this.initialized) return;

        try {
            console.log('üé® –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è UIManager...');
            
            // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑–æ–≤—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
            await this.initializeProgressBar();
            await this.initializeIndustrySelector();
            await this.initializeBusinessSizeStep();
            await this.initializeMarketingBudgetStep();
            await this.initializeMarketingTeamStep();
            await this.initializeMarketingToolsStep();
            await this.initializeContactFormStep();
            
            // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–≤—è–∑–µ–π –º–µ–∂–¥—É –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞–º–∏
            this.setupComponentConnections();
            
            // –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è
            this.subscribeToStateChanges();
            
            this.initialized = true;
            console.log('‚úÖ UIManager –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
            
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ UIManager:', error);
            throw error;
        }
    }

    /**
     * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è ProgressBar
     */
    async initializeProgressBar() {
        try {
            const progressContainer = document.getElementById('progress-container');
            
            if (!progressContainer) {
                throw new Error('–ù–µ –Ω–∞–π–¥–µ–Ω –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä #progress-container');
            }
            
            if (typeof window.ProgressBar === 'undefined') {
                throw new Error('ProgressBar –∫–ª–∞—Å—Å –Ω–µ –Ω–∞–π–¥–µ–Ω');
            }
            
            const progressBar = new window.ProgressBar(progressContainer, 6, {
                allowClickNavigation: true,
                showPercentage: true,
                enableKeyboardNavigation: true,
                trackAnalytics: true
            });
            
            this.components.set('progressBar', progressBar);
            console.log('‚úÖ ProgressBar –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
            
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ ProgressBar:', error);
            throw error;
        }
    }

    /**
     * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è IndustrySelector
     */
    async initializeIndustrySelector() {
        try {
            const formContent = document.getElementById('form-content');
            
            if (!formContent) {
                throw new Error('–ù–µ –Ω–∞–π–¥–µ–Ω –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä #form-content');
            }
            
            if (typeof window.IndustrySelector === 'undefined') {
                throw new Error('IndustrySelector –∫–ª–∞—Å—Å –Ω–µ –Ω–∞–π–¥–µ–Ω');
            }
            
            const industrySelector = new window.IndustrySelector(formContent, {
                onSelect: (industry) => this.handleIndustrySelect(industry),
                onNext: (selectionData) => this.handleIndustryNext(selectionData),
                showPopularSection: true,
                enableSearch: true
            });
            
            this.components.set('industrySelector', industrySelector);
            console.log('‚úÖ IndustrySelector –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
            
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ IndustrySelector:', error);
            throw error;
        }
    }

    /**
     * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è BusinessSizeStep
     */
    async initializeBusinessSizeStep() {
        try {
            const formContent = document.getElementById('form-content');
            
            if (!formContent) {
                throw new Error('–ù–µ –Ω–∞–π–¥–µ–Ω –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä #form-content');
            }
            
            if (typeof window.BusinessSizeStep === 'undefined') {
                throw new Error('BusinessSizeStep –∫–ª–∞—Å—Å –Ω–µ –Ω–∞–π–¥–µ–Ω');
            }
            
            const businessSizeStep = new window.BusinessSizeStep(formContent, {
                onSelect: (size) => this.handleBusinessSizeSelect(size),
                onNext: (data) => this.handleBusinessSizeNext(data),
                onBack: (data) => this.handleBusinessSizeBack(data),
                trackAnalytics: true
            });
            
            this.components.set('businessSizeStep', businessSizeStep);
            console.log('‚úÖ BusinessSizeStep –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
            
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ BusinessSizeStep:', error);
            throw error;
        }
    }

    /**
     * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è MarketingBudgetStep
     */
    async initializeMarketingBudgetStep() {
        try {
            const formContent = document.getElementById('form-content');
            
            if (!formContent) {
                throw new Error('–ù–µ –Ω–∞–π–¥–µ–Ω –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä #form-content');
            }
            
            if (typeof window.MarketingBudgetStep === 'undefined') {
                throw new Error('MarketingBudgetStep –∫–ª–∞—Å—Å –Ω–µ –Ω–∞–π–¥–µ–Ω');
            }
            
            const marketingBudgetStep = new window.MarketingBudgetStep(formContent, {
                onSelect: (budget) => this.handleMarketingBudgetSelect(budget),
                onNext: (data) => this.handleMarketingBudgetNext(data),
                onBack: (data) => this.handleMarketingBudgetBack(data),
                trackAnalytics: true
            });
            
            this.components.set('marketingBudgetStep', marketingBudgetStep);
            console.log('‚úÖ MarketingBudgetStep –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
            
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ MarketingBudgetStep:', error);
            throw error;
        }
    }

    /**
     * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è MarketingTeamStep
     */
    async initializeMarketingTeamStep() {
        try {
            const formContent = document.getElementById('form-content');
            
            if (!formContent) {
                throw new Error('–ù–µ –Ω–∞–π–¥–µ–Ω –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä #form-content');
            }
            
            if (typeof window.MarketingTeamStep === 'undefined') {
                throw new Error('MarketingTeamStep –∫–ª–∞—Å—Å –Ω–µ –Ω–∞–π–¥–µ–Ω');
            }
            
            const marketingTeamStep = new window.MarketingTeamStep(formContent, {
                onSelect: (data) => this.handleMarketingTeamSelect(data),
                onNext: (data) => this.handleMarketingTeamNext(data),
                onBack: (data) => this.handleMarketingTeamBack(data),
                trackAnalytics: true
            });
            
            this.components.set('marketingTeamStep', marketingTeamStep);
            console.log('‚úÖ MarketingTeamStep –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
            
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ MarketingTeamStep:', error);
            throw error;
        }
    }

    /**
     * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è MarketingToolsStep
     */
    async initializeMarketingToolsStep() {
        try {
            const formContent = document.getElementById('form-content');
            
            if (!formContent) {
                throw new Error('–ù–µ –Ω–∞–π–¥–µ–Ω –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä #form-content');
            }
            
            if (typeof window.MarketingToolsStep === 'undefined') {
                throw new Error('MarketingToolsStep –∫–ª–∞—Å—Å –Ω–µ –Ω–∞–π–¥–µ–Ω');
            }
            
            const marketingToolsStep = new window.MarketingToolsStep(formContent, {
                onSelect: (data) => this.handleMarketingToolsSelect(data),
                onNext: (data) => this.handleMarketingToolsNext(data),
                onBack: (data) => this.handleMarketingToolsBack(data),
                trackAnalytics: true
            });
            
            this.components.set('marketingToolsStep', marketingToolsStep);
            console.log('‚úÖ MarketingToolsStep –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
            
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ MarketingToolsStep:', error);
            throw error;
        }
    }

    /**
     * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è ContactFormStep
     */
    async initializeContactFormStep() {
        try {
            if (typeof window.ContactFormStep === 'undefined') {
                throw new Error('ContactFormStep –∫–ª–∞—Å—Å –Ω–µ –Ω–∞–π–¥–µ–Ω');
            }
            
            const contactFormStep = new window.ContactFormStep({
                analytics: window.analytics,
                onSubmit: (contactData) => this.handleContactFormSubmit(contactData),
                onComplete: () => this.onCalculatorComplete()
            });
            
            this.components.set('contactFormStep', contactFormStep);
            console.log('‚úÖ ContactFormStep –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
            
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ ContactFormStep:', error);
            throw error;
        }
    }

    /**
     * –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–≤—è–∑–µ–π –º–µ–∂–¥—É –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞–º–∏
     */
    setupComponentConnections() {
        try {
            // –°–ª—É—à–∞—Ç–µ–ª–∏ —Å–æ–±—ã—Ç–∏–π ProgressBar
            const progressBar = this.components.get('progressBar');
            if (progressBar) {
                const progressContainer = document.getElementById('progress-container');
                if (progressContainer) {
                    progressContainer.addEventListener('stepClicked', (event) => {
                        this.handleStepNavigation(event.detail.step);
                    });
                }
            }
            
            // –°–ª—É—à–∞—Ç–µ–ª–∏ —Å–æ–±—ã—Ç–∏–π IndustrySelector
            const industrySelector = this.components.get('industrySelector');
            if (industrySelector) {
                const formContainer = document.getElementById('form-content');
                if (formContainer) {
                    formContainer.addEventListener('industryConfirmed', (event) => {
                        this.handleIndustryConfirmed(event.detail);
                    });
                    
                    formContainer.addEventListener('industrySelected', (event) => {
                        this.handleIndustrySelected(event.detail);
                    });
                }
            }
            
            console.log('‚úÖ –°–≤—è–∑–∏ –º–µ–∂–¥—É –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞–º–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã');
            
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–≤—è–∑–µ–π:', error);
        }
    }

    /**
     * –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è
     */
    subscribeToStateChanges() {
        // –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è —à–∞–≥–∞
        this.appState.subscribe('stepChanged', (step) => {
            this.updateStepDisplay(step);
        });
        
        // –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö —Ñ–æ—Ä–º—ã
        this.appState.subscribe('formDataChanged', (formData) => {
            this.updateFormDataDisplay(formData);
        });
        
        // –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
        this.appState.subscribe('resultsChanged', (results) => {
            this.updateResultsDisplay(results);
        });
    }

    /**
     * –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —à–∞–≥–∞
     */
    updateStepDisplay(step) {
        try {
            // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ ProgressBar
            const progressBar = this.components.get('progressBar');
            if (progressBar) {
                progressBar.updateProgress(step);
            }
            
            // –ü–æ–∫–∞–∑ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–≥–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
            this.showStepComponent(step);
            
            // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≥–æ–ª–æ–≤–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
            this.updatePageTitle(step);
            
            console.log(`üìç –û–±–Ω–æ–≤–ª–µ–Ω —à–∞–≥: ${step}`);
            
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —à–∞–≥–∞:', error);
        }
    }

    /**
     * –ü–æ–∫–∞–∑ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ —à–∞–≥–∞
     */
    showStepComponent(step) {
        try {
            // –°–∫—Ä—ã—Ç—å –≤—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
            this.hideAllComponents();
            
            // –ü–æ–∫–∞–∑–∞—Ç—å –Ω—É–∂–Ω—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç
            switch (step) {
                case 1:
                    this.showComponent('industrySelector');
                    break;
                case 2:
                    this.showComponent('businessSizeStep');
                    break;
                case 3:
                    this.showComponent('marketingBudgetStep');
                    break;
                case 4:
                    this.showComponent('marketingToolsStep');
                    break;
                case 5:
                    this.showComponent('marketingTeamStep');
                    break;
                case 6:
                    this.showComponent('contactFormStep');
                    break;
                default:
                    console.warn(`‚ö†Ô∏è –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —à–∞–≥: ${step}`);
            }
            
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–∫–∞–∑–∞ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ —à–∞–≥–∞:', error);
        }
    }

    /**
     * –°–∫—Ä—ã—Ç–∏–µ –≤—Å–µ—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
     */
    hideAllComponents() {
        this.components.forEach((component, name) => {
            if (component && typeof component.hide === 'function') {
                component.hide();
            } else if (component && component.container) {
                component.container.style.display = 'none';
            }
        });
    }

    /**
     * –ü–æ–∫–∞–∑ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
     */
    showComponent(componentName) {
        const component = this.components.get(componentName);
        if (component) {
            if (typeof component.show === 'function') {
                component.show();
            } else if (component.container) {
                component.container.style.display = 'block';
            }
            
            // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
            this.updateComponentData(componentName);
        }
    }

    /**
     * –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
     */
    updateComponentData(componentName) {
        const component = this.components.get(componentName);
        const formData = this.appState.getFormData();
        
        if (component && typeof component.updateWithFormData === 'function') {
            component.updateWithFormData(formData);
        }
    }

    /**
     * –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≥–æ–ª–æ–≤–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
     */
    updatePageTitle(step) {
        const titles = {
            1: '–í—ã–±–æ—Ä –æ—Ç—Ä–∞—Å–ª–∏ - Steamphony Calculator',
            2: '–†–∞–∑–º–µ—Ä –±–∏–∑–Ω–µ—Å–∞ - Steamphony Calculator',
            3: '–ú–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤—ã–π –±—é–¥–∂–µ—Ç - Steamphony Calculator',
            4: '–ú–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã - Steamphony Calculator',
            5: '–ú–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤–∞—è –∫–æ–º–∞–Ω–¥–∞ - Steamphony Calculator',
            6: '–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∞–Ω–∞–ª–∏–∑–∞ - Steamphony Calculator'
        };
        
        document.title = titles[step] || 'Steamphony Calculator';
    }

    /**
     * –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö —Ñ–æ—Ä–º—ã
     */
    updateFormDataDisplay(formData) {
        // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤—Å–µ—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ —Å –Ω–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
        this.components.forEach((component, name) => {
            if (component && typeof component.updateWithFormData === 'function') {
                component.updateWithFormData(formData);
            }
        });
    }

    /**
     * –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
     */
    updateResultsDisplay(results) {
        const contactFormStep = this.components.get('contactFormStep');
        if (contactFormStep && typeof contactFormStep.updateWithResults === 'function') {
            contactFormStep.updateWithResults(results);
        }
    }

    /**
     * –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
     */
    handleIndustrySelect(industry) {
        console.log('üìä –í—ã–±—Ä–∞–Ω–∞ –æ—Ç—Ä–∞—Å–ª—å:', industry);
        this.appState.updateField('industry', industry);
    }

    handleIndustryNext(selectionData) {
        console.log('‚û°Ô∏è –ü–µ—Ä–µ—Ö–æ–¥ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —à–∞–≥—É:', selectionData);
        
        this.appState.updateFormData(selectionData);
        this.navigationManager.nextStep();
    }

    handleBusinessSizeSelect(size) {
        console.log('üìè –†–∞–∑–º–µ—Ä –±–∏–∑–Ω–µ—Å–∞ –≤—ã–±—Ä–∞–Ω:', size);
        this.appState.updateField('businessSize', size);
    }

    handleBusinessSizeNext(data) {
        console.log('‚û°Ô∏è –ü–µ—Ä–µ—Ö–æ–¥ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —à–∞–≥—É –∏–∑ BusinessSizeStep:', data);
        
        this.appState.updateFormData(data);
        this.navigationManager.nextStep();
    }

    handleBusinessSizeBack(data) {
        console.log('‚¨ÖÔ∏è –í–æ–∑–≤—Ä–∞—Ç –∫ –ø—Ä–µ–¥—ã–¥—É—â–µ–º—É —à–∞–≥—É –∏–∑ BusinessSizeStep:', data);
        this.navigationManager.previousStep();
    }

    handleMarketingBudgetSelect(budget) {
        console.log('üí∞ –ú–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤—ã–π –±—é–¥–∂–µ—Ç –≤—ã–±—Ä–∞–Ω:', budget);
        this.appState.updateField('marketingBudget', budget);
    }

    handleMarketingBudgetNext(data) {
        console.log('‚û°Ô∏è –ü–µ—Ä–µ—Ö–æ–¥ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —à–∞–≥—É –∏–∑ MarketingBudgetStep:', data);
        
        this.appState.updateFormData(data);
        this.navigationManager.nextStep();
    }

    handleMarketingBudgetBack(data) {
        console.log('‚¨ÖÔ∏è –í–æ–∑–≤—Ä–∞—Ç –∫ –ø—Ä–µ–¥—ã–¥—É—â–µ–º—É —à–∞–≥—É –∏–∑ MarketingBudgetStep:', data);
        this.navigationManager.previousStep();
    }

    handleMarketingTeamSelect(data) {
        console.log('üë• –ú–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤–∞—è –∫–æ–º–∞–Ω–¥–∞ –≤—ã–±—Ä–∞–Ω–∞:', data);
        this.appState.updateField('marketingTeam', data);
    }

    handleMarketingTeamNext(data) {
        console.log('‚û°Ô∏è –ü–µ—Ä–µ—Ö–æ–¥ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —à–∞–≥—É –∏–∑ MarketingTeamStep:', data);
        
        this.appState.updateFormData(data);
        this.navigationManager.nextStep();
    }

    handleMarketingTeamBack(data) {
        console.log('‚¨ÖÔ∏è –í–æ–∑–≤—Ä–∞—Ç –∫ –ø—Ä–µ–¥—ã–¥—É—â–µ–º—É —à–∞–≥—É –∏–∑ MarketingTeamStep:', data);
        this.navigationManager.previousStep();
    }

    handleMarketingToolsSelect(data) {
        console.log('üõ†Ô∏è –ú–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –≤—ã–±—Ä–∞–Ω—ã:', data);
        this.appState.updateField('marketingTools', data);
    }

    handleMarketingToolsNext(data) {
        console.log('‚û°Ô∏è –ü–µ—Ä–µ—Ö–æ–¥ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —à–∞–≥—É –∏–∑ MarketingToolsStep:', data);
        
        this.appState.updateFormData(data);
        this.navigationManager.nextStep();
    }

    handleMarketingToolsBack(data) {
        console.log('‚¨ÖÔ∏è –í–æ–∑–≤—Ä–∞—Ç –∫ –ø—Ä–µ–¥—ã–¥—É—â–µ–º—É —à–∞–≥—É –∏–∑ MarketingToolsStep:', data);
        this.navigationManager.previousStep();
    }

    handleContactFormSubmit(contactData) {
        console.log('üìù –§–æ—Ä–º–∞ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞:', contactData);
        this.appState.updateField('contactInfo', contactData);
    }

    handleIndustryConfirmed(detail) {
        console.log('‚úÖ –û—Ç—Ä–∞—Å–ª—å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞:', detail);
        this.appState.updateField('industry', detail.industry);
    }

    handleIndustrySelected(detail) {
        console.log('üéØ –û—Ç—Ä–∞—Å–ª—å –≤—ã–±—Ä–∞–Ω–∞:', detail);
    }

    handleStepNavigation(step) {
        console.log(`üîÑ –ü–µ—Ä–µ—Ö–æ–¥ –∫ —à–∞–≥—É ${step}`);
        this.navigationManager.navigateToStep(step);
    }

    onCalculatorComplete() {
        console.log('üéâ –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –∑–∞–≤–µ—Ä—à–µ–Ω!');
        
        // Dispatch —Å–æ–±—ã—Ç–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
        const event = new CustomEvent('calculatorComplete', {
            detail: {
                formData: this.appState.getFormData(),
                results: this.appState.getResults(),
                completionTime: Date.now()
            },
            bubbles: true
        });
        
        document.dispatchEvent(event);
    }

    /**
     * –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
     */
    getComponent(name) {
        return this.components.get(name);
    }

    /**
     * –°–±—Ä–æ—Å –≤—Å–µ—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
     */
    reset() {
        this.components.forEach((component, name) => {
            if (component && typeof component.reset === 'function') {
                component.reset();
            }
        });
    }

    /**
     * –£–Ω–∏—á—Ç–æ–∂–µ–Ω–∏–µ UI –º–µ–Ω–µ–¥–∂–µ—Ä–∞
     */
    destroy() {
        this.components.forEach((component, name) => {
            if (component && typeof component.destroy === 'function') {
                component.destroy();
            }
        });
        
        this.components.clear();
        this.initialized = false;
    }
}

// –≠–∫—Å–ø–æ—Ä—Ç —Å–∏–Ω–≥–ª—Ç–æ–Ω–∞
export const uiManager = new UIManager(); 