/**
 * AppInitializer - –ú–æ–¥—É–ª—å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
 * –û—Ç–≤–µ—á–∞–µ—Ç –∑–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é –≤—Å–µ—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ –∏ —Å–µ—Ä–≤–∏—Å–æ–≤
 */

import { AppState } from './AppState.js';
import { NavigationManager } from '../managers/NavigationManager.js';
import { calculator } from './Calculator.js';
import { eventHandlers } from '../handlers/EventHandlers.js';
import { uiManager } from '../components/UIManager.js';
import { SecurityLayer } from '../security/index.js';
import Analytics from '../services/Analytics.js';
import CookieBanner from '../components/CookieBanner.js';

class AppInitializer {
  constructor() {
    this.appState = AppState.getInstance();
    this.navigationManager = NavigationManager.getInstance();
    this.calculator = calculator;
    this.eventHandlers = eventHandlers;
    this.uiManager = uiManager;
    this.securityLayer = SecurityLayer;
  }

  /**
   * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
   */
  async initialize() {
    try {
      console.log('üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...');
      
      // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
      await this.initializeAdvancedSecurity();
      await this.initializePerformanceOptimization();
      
      // –°–∫—Ä—ã—Ç—å —ç–∫—Ä–∞–Ω –∑–∞–≥—Ä—É–∑–∫–∏
      this.hideLoadingState();
      
      // –ü–æ–∫–∞–∑–∞—Ç—å –∫–æ–Ω—Ç–µ–Ω—Ç –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞
      this.showCalculatorContent();
      
      // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è UI –º–µ–Ω–µ–¥–∂–µ—Ä–∞
      await this.uiManager.initialize();
      
      // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞
      await this.initializeCalculator();
      
      // –ú–∞—Ä–∫–∏—Ä–æ–≤–∫–∞ –∫–∞–∫ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ
      this.appState.setInitialized(true);
      
      // –ü–µ—Ä–µ–ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ Analytics –∫ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞–º –ø–æ—Å–ª–µ –∏—Ö –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
      this.connectAnalyticsEvents();
      
      console.log('‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–æ');
      
      // Dispatch —Å–æ–±—ã—Ç–∏—è –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏
      this.dispatchEvent('appReady', this.appState.getAppState());
      
    } catch (error) {
      console.error('App: –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤:', error);
      this.handleInitializationError(error);
    }
  }

  /**
   * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Advanced Security Features
   */
  async initializeAdvancedSecurity() {
    try {
      console.log('üîí –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Advanced Security Features...');
      
      // Initialize CSP Configuration
      this.cspConfig = new CSPConfig();
      this.cspConfig.applyCSPToDocument(document);
      
      // Initialize Security Headers
      this.securityHeaders = new SecurityHeaders();
      this.securityHeaders.setCSPConfig(this.cspConfig);
      this.securityHeaders.applyToDocument(document);
      
      // Initialize Threat Detector
      this.threatDetector = new ThreatDetector();
      
      // Initialize Security Monitor
      this.securityMonitor = new SecurityMonitor();
      this.securityMonitor.initialize(document);
      
      // Set up global security monitoring
      this.setupGlobalSecurityMonitoring();
      
      console.log('‚úÖ Advanced Security Features –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã');
      
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ Advanced Security Features:', error);
      // Don't throw error - security features are optional for app functionality
    }
  }

  /**
   * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Performance Optimization Features
   */
  async initializePerformanceOptimization() {
    try {
      console.log('‚ö° –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Performance Optimization Features...');
      
      // Performance optimization configuration
      const performanceConfig = {
        lazyLoading: {
          enabled: true,
          preloadModules: [
            './src/components/Calculator.js',
            './src/services/Analytics.js'
          ],
          maxRetries: 3,
          loadingTimeout: 10000
        },
        caching: {
          enabled: true,
          serviceWorker: true,
          strategies: {
            staticAssets: 'cache-first',
            apiResponses: 'network-first',
            analytics: 'background-sync'
          }
        },
        monitoring: {
          enabled: true,
          coreWebVitals: true,
          bundleAnalysis: true,
          reportingEndpoint: '/api/performance'
        }
      };
      
      // Initialize LazyLoader
      this.lazyLoader = new LazyLoader();
      this.lazyLoader.initialize(performanceConfig.lazyLoading);
      
      // Initialize CacheManager
      this.cacheManager = new CacheManager();
      await this.cacheManager.initialize(performanceConfig.caching);
      
      // Create and register Service Worker
      const serviceWorkerScript = this.cacheManager.createServiceWorkerScript();
      const serviceWorkerBlob = new Blob([serviceWorkerScript], { type: 'application/javascript' });
      const serviceWorkerUrl = URL.createObjectURL(serviceWorkerBlob);
      await this.cacheManager.registerServiceWorker(serviceWorkerUrl);
      
      // Initialize Performance Monitor
      this.performanceMonitor = new PerformanceMonitor();
      this.performanceMonitor.initialize(performanceConfig.monitoring);
      
      // Set up performance monitoring
      this.setupPerformanceMonitoring();
      
      console.log('‚úÖ Performance Optimization Features –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã');
      
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ Performance Optimization Features:', error);
      // Don't throw error - performance features are optional for app functionality
    }
  }

  /**
   * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Calculator
   */
  async initializeCalculator() {
    try {
      // –ò—Å–ø–æ–ª—å–∑—É–µ–º –º–æ–¥—É–ª—å–Ω—ã–π –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä
      this.calculator = calculator;
      
      console.log('‚úÖ Calculator –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
      
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ Calculator:', error);
      throw error;
    }
  }

  /**
   * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Analytics –∏ Cookie Banner
   */
  initializeAnalytics() {
    try {
      // Initialize Analytics
      this.analytics = new Analytics({
        trackingId: 'G-XXXXXXXXXX',
        anonymizeIP: true,
        respectDoNotTrack: true,
        enableDebugMode: false
      });
      
      // Initialize Cookie Banner
      this.cookieBanner = new CookieBanner({
        position: 'bottom',
        theme: 'light',
        language: 'ru',
        analytics: this.analytics
      });
      
      // Connect Analytics to ProgressBar
      if (this.progressBar) {
        this.analytics.connectToProgressBar(this.progressBar);
        console.log('üîó Analytics –ø–æ–¥–∫–ª—é—á–µ–Ω –∫ ProgressBar');
      }
      
      // Connect Analytics to IndustrySelector
      if (this.industrySelector) {
        this.analytics.connectToIndustrySelector(this.industrySelector);
        console.log('üîó Analytics –ø–æ–¥–∫–ª—é—á–µ–Ω –∫ IndustrySelector');
      }
      
      console.log('‚úÖ Analytics –∏ Cookie Banner –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã');
      
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ Analytics:', error);
      // Don't throw error - analytics are optional for app functionality
    }
  }

  /**
   * –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ Analytics —Å–æ–±—ã—Ç–∏–π
   */
  connectAnalyticsEvents() {
    if (!this.analytics) return;
    
    try {
      // –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ ProgressBar
      if (this.progressBar) {
        this.analytics.connectToProgressBar(this.progressBar);
        console.log('üîó Analytics –ø–æ–¥–∫–ª—é—á–µ–Ω –∫ ProgressBar');
      }
      
      // –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ IndustrySelector
      if (this.industrySelector) {
        this.analytics.connectToIndustrySelector(this.industrySelector);
        console.log('üîó Analytics –ø–æ–¥–∫–ª—é—á–µ–Ω –∫ IndustrySelector');
      }
      
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è Analytics —Å–æ–±—ã—Ç–∏–π:', error);
    }
  }

  /**
   * –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
   */
  setupPerformanceMonitoring() {
    if (!this.performanceMonitor) return;
    
    try {
      // Monitor Core Web Vitals
      this.performanceMonitor.monitorCoreWebVitals();
      
      // Monitor bundle size
      this.performanceMonitor.measureBundleSize();
      
      // Monitor load times
      this.performanceMonitor.monitorLoadTimes();
      
      // Set up performance reporting
      this.performanceMonitor.setupReporting();
      
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏:', error);
    }
  }

  /**
   * –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
   */
  setupGlobalSecurityMonitoring() {
    if (!this.securityMonitor) return;
    
    try {
      // Monitor form submissions
      document.addEventListener('submit', (event) => {
        this.securityMonitor.monitorFormSubmission(event);
      });
      
      // Monitor input activity
      document.addEventListener('input', (event) => {
        this.securityMonitor.monitorInputActivity(event);
      });
      
      // Monitor navigation
      document.addEventListener('click', (event) => {
        this.securityMonitor.monitorNavigation(event);
      });
      
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏:', error);
    }
  }

  /**
   * –°–∫—Ä—ã—Ç–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∑–∞–≥—Ä—É–∑–∫–∏
   */
  hideLoadingState() {
    const loadingElement = document.getElementById('loading');
    if (loadingElement) {
      loadingElement.style.display = 'none';
    }
  }

  /**
   * –ü–æ–∫–∞–∑ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞
   */
  showCalculatorContent() {
    const calculatorElement = document.getElementById('calculator');
    if (calculatorElement) {
      calculatorElement.style.display = 'block';
    }
  }

  /**
   * –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
   */
  handleInitializationError(error) {
    console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏:', error);
    
    // –ü–æ–∫–∞–∑–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
    this.showError('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–±–Ω–æ–≤–∏—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É.');
    
    // –û—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—à–∏–±–∫—É –≤ –∞–Ω–∞–ª–∏—Ç–∏–∫—É
    if (this.analytics) {
      this.analytics.trackError('initialization_error', error.message);
    }
  }

  /**
   * –ü–æ–∫–∞–∑ –æ—à–∏–±–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
   */
  showError(message) {
    const errorContainer = document.getElementById('error-container');
    if (errorContainer) {
      errorContainer.innerHTML = `
        <div class="error-message">
          <h3>–û—à–∏–±–∫–∞</h3>
          <p>${message}</p>
          <button onclick="location.reload()">–û–±–Ω–æ–≤–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É</button>
        </div>
      `;
      errorContainer.style.display = 'block';
    }
  }

  /**
   * Dispatch —Å–æ–±—ã—Ç–∏—è
   */
  dispatchEvent(eventName, detail = {}) {
    try {
      const event = new CustomEvent(eventName, {
        detail: {
          timestamp: Date.now(),
          ...detail
        },
        bubbles: true,
        cancelable: true
      });
      
      document.dispatchEvent(event);
      
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ dispatch —Å–æ–±—ã—Ç–∏—è:', error);
    }
  }
}

export default AppInitializer; 